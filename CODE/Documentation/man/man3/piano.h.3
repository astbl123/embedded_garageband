.TH "piano.h" 3 "Sat Apr 30 2011" "Version 1.0" "Embedded GarageBand" \" -*- nroff -*-
.ad l
.nh
.SH NAME
piano.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'hal_defs.h'\fP
.br
\fC#include 'hal_types.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBplayVPiano\fP (void)"
.br
.ti -1c
.RI "void \fBplayRPiano\fP (void)"
.br
.ti -1c
.RI "void \fBplayVGuitar\fP (void)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void playRPiano (void)"
.PP
Definition at line 66 of file piano.c.
.PP
.nf
                  {
        
}
.fi
.SS "void playVGuitar (void)"
.PP
Definition at line 80 of file piano.c.
.PP
.nf
                   {
        
        unsigned char usrExit[] = {0};
        char keyNote = 0;
        unsigned int xCoord = 0;
        unsigned int yCoord = 0;
        unsigned char sendBuf[3] = {0};
        
        while(1) {
                if (RF_gets_nblk(usrExit) != 0) {
                        if (strncmp (usrExit, 'STOP', 4) == 0) {
                                break;
                        }
                }
                else {
                        getTsXY(&xCoord, &yCoord);
                        keyNote = guitar_key_match(xCoord, yCoord);
                        halMcuWaitMs(20);
                        if (keyNote) {
                                //send the note over rf and serial
                                sendBuf[0] = 0;                                 //Channel
                                sendBuf[1] = keyNote;           //Note
                                sendBuf[2] = 0x7f;                      //Attack Velocity //TODO: use pressure
                                halMcuWaitMs(50);
                                RF_Send(sendBuf, 3);
                        }
                }
        }//while(1)
}
.fi
.SS "void playVPiano (void)"
.PP
Definition at line 36 of file piano.c.
.PP
.nf
                  {
        
        unsigned char usrExit[] = {0};
        char keyNote = 0;
        unsigned int xCoord = 0;
        unsigned int yCoord = 0;
        unsigned char sendBuf[3] = {0};
        
        while(1) {
                if (RF_gets_nblk(usrExit) != 0) {
                        if (strncmp (usrExit, 'STOP', 4) == 0) {
                                break;
                        }
                }
                else {
                        getTsXY(&xCoord, &yCoord);
                        keyNote = piano_key_match(xCoord, yCoord);
                        halMcuWaitMs(20);
                        if (keyNote) {
                                //send the note over rf and serial
                                sendBuf[0] = 0;                                 //Channel
                                sendBuf[1] = keyNote;           //Note
                                sendBuf[2] = 0x7f;                      //Attack Velocity //TODO: use pressure
                                halMcuWaitMs(50);
                                RF_Send(sendBuf, 3);
                        }
                }
        }//while(1)
}
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Embedded GarageBand from the source code.
